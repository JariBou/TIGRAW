//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/PlayerBundle/Player Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Actions"",
    ""maps"": [
        {
            ""name"": ""Player maps"",
            ""id"": ""3c747092-31ae-4fd9-90df-9fbfaae0713b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3b9e562d-d13f-44ba-8f96-f3aaadb82948"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""25f4f4a1-4bba-484e-8197-eff558953bdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""bbd279a1-415c-4e77-8b78-90168c7c1e59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenStats"",
                    ""type"": ""Button"",
                    ""id"": ""e882aab9-8bc8-45d1-a03c-e3078b7319e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 0"",
                    ""type"": ""Button"",
                    ""id"": ""aa4dd6c0-7a28-48f3-9e26-b77220a7a3be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 1"",
                    ""type"": ""Button"",
                    ""id"": ""4f54ab65-63a9-4864-8f86-d8b806ce69d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 2"",
                    ""type"": ""Button"",
                    ""id"": ""7be2b693-35f2-4b5c-8cb4-d7ed8f09beff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 3"",
                    ""type"": ""Button"",
                    ""id"": ""a53756c2-1e7e-4df4-ba5e-8c982a2bb1c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 4"",
                    ""type"": ""Button"",
                    ""id"": ""ad450f0a-1e8a-4b31-a8cd-9ac5918a8757"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 5"",
                    ""type"": ""Button"",
                    ""id"": ""ca0a0bec-671f-487b-b37f-13134b2b68b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 6"",
                    ""type"": ""Button"",
                    ""id"": ""a91a217c-4959-4503-9627-736fda251982"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 7"",
                    ""type"": ""Button"",
                    ""id"": ""971d90c1-cf37-4568-801a-431a7ecd3241"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell 8"",
                    ""type"": ""Button"",
                    ""id"": ""94db5e6f-bf3f-413c-9fe6-429c0221bbb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""a62b2195-0fee-42c3-96d5-840ac477078f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e7be0715-2d1e-4b80-a497-5705c9a9339a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""34958cf5-0d11-44ea-817d-04b248e8aa32"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c83ecb12-a015-4dc8-ad5f-9ad685a62de7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""10db87d0-434e-4bfb-8f48-eaebb78f9932"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d5784abf-8927-4e07-af80-ae4732cac0b4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6faedec7-ed17-46b2-a778-5fcbab3440f0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cc21c2e-b80c-4734-b188-45979479526e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a97cb5ef-d4b9-47d6-97bc-8aa0c179dcbe"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenStats"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d4111e0-dc70-4a47-9ce3-bc7d8d7d380d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""873cf3bb-a619-4263-9691-dde2d1b60614"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7604c4b-65b3-4b86-ba26-a53da6234efe"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b21ba3f7-4848-4204-9e1b-b32c7955622c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa389889-7f2e-4b4a-972a-c0caa602203e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73a96d04-16af-4778-bbd5-28a3c0b3690e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a23fe30-bae8-4575-8c5c-a48d16d4506e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0d6e082-2e5d-4f30-a3e2-b930da520025"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8a098c6-f450-42e5-89b1-a736d52213bd"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bab69c2-afd7-4a50-9f0c-a5b42226304b"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpellCastingMap"",
            ""id"": ""2ad9643e-bc30-4892-aca0-ab58fd97e2ed"",
            ""actions"": [
                {
                    ""name"": ""SpellCastingMap"",
                    ""type"": ""Button"",
                    ""id"": ""7fdc5a16-6659-4735-920d-94e69adf04e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""80e1f094-f445-4d6f-b8ed-756a67155450"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpellCastingMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player maps
        m_Playermaps = asset.FindActionMap("Player maps", throwIfNotFound: true);
        m_Playermaps_Movement = m_Playermaps.FindAction("Movement", throwIfNotFound: true);
        m_Playermaps_Escape = m_Playermaps.FindAction("Escape", throwIfNotFound: true);
        m_Playermaps_Interact = m_Playermaps.FindAction("Interact", throwIfNotFound: true);
        m_Playermaps_OpenStats = m_Playermaps.FindAction("OpenStats", throwIfNotFound: true);
        m_Playermaps_Spell0 = m_Playermaps.FindAction("Spell 0", throwIfNotFound: true);
        m_Playermaps_Spell1 = m_Playermaps.FindAction("Spell 1", throwIfNotFound: true);
        m_Playermaps_Spell2 = m_Playermaps.FindAction("Spell 2", throwIfNotFound: true);
        m_Playermaps_Spell3 = m_Playermaps.FindAction("Spell 3", throwIfNotFound: true);
        m_Playermaps_Spell4 = m_Playermaps.FindAction("Spell 4", throwIfNotFound: true);
        m_Playermaps_Spell5 = m_Playermaps.FindAction("Spell 5", throwIfNotFound: true);
        m_Playermaps_Spell6 = m_Playermaps.FindAction("Spell 6", throwIfNotFound: true);
        m_Playermaps_Spell7 = m_Playermaps.FindAction("Spell 7", throwIfNotFound: true);
        m_Playermaps_Spell8 = m_Playermaps.FindAction("Spell 8", throwIfNotFound: true);
        m_Playermaps_Run = m_Playermaps.FindAction("Run", throwIfNotFound: true);
        // SpellCastingMap
        m_SpellCastingMap = asset.FindActionMap("SpellCastingMap", throwIfNotFound: true);
        m_SpellCastingMap_SpellCastingMap = m_SpellCastingMap.FindAction("SpellCastingMap", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player maps
    private readonly InputActionMap m_Playermaps;
    private IPlayermapsActions m_PlayermapsActionsCallbackInterface;
    private readonly InputAction m_Playermaps_Movement;
    private readonly InputAction m_Playermaps_Escape;
    private readonly InputAction m_Playermaps_Interact;
    private readonly InputAction m_Playermaps_OpenStats;
    private readonly InputAction m_Playermaps_Spell0;
    private readonly InputAction m_Playermaps_Spell1;
    private readonly InputAction m_Playermaps_Spell2;
    private readonly InputAction m_Playermaps_Spell3;
    private readonly InputAction m_Playermaps_Spell4;
    private readonly InputAction m_Playermaps_Spell5;
    private readonly InputAction m_Playermaps_Spell6;
    private readonly InputAction m_Playermaps_Spell7;
    private readonly InputAction m_Playermaps_Spell8;
    private readonly InputAction m_Playermaps_Run;
    public struct PlayermapsActions
    {
        private @PlayerActions m_Wrapper;
        public PlayermapsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Playermaps_Movement;
        public InputAction @Escape => m_Wrapper.m_Playermaps_Escape;
        public InputAction @Interact => m_Wrapper.m_Playermaps_Interact;
        public InputAction @OpenStats => m_Wrapper.m_Playermaps_OpenStats;
        public InputAction @Spell0 => m_Wrapper.m_Playermaps_Spell0;
        public InputAction @Spell1 => m_Wrapper.m_Playermaps_Spell1;
        public InputAction @Spell2 => m_Wrapper.m_Playermaps_Spell2;
        public InputAction @Spell3 => m_Wrapper.m_Playermaps_Spell3;
        public InputAction @Spell4 => m_Wrapper.m_Playermaps_Spell4;
        public InputAction @Spell5 => m_Wrapper.m_Playermaps_Spell5;
        public InputAction @Spell6 => m_Wrapper.m_Playermaps_Spell6;
        public InputAction @Spell7 => m_Wrapper.m_Playermaps_Spell7;
        public InputAction @Spell8 => m_Wrapper.m_Playermaps_Spell8;
        public InputAction @Run => m_Wrapper.m_Playermaps_Run;
        public InputActionMap Get() { return m_Wrapper.m_Playermaps; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayermapsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayermapsActions instance)
        {
            if (m_Wrapper.m_PlayermapsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnMovement;
                @Escape.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnEscape;
                @Interact.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnInteract;
                @OpenStats.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnOpenStats;
                @OpenStats.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnOpenStats;
                @OpenStats.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnOpenStats;
                @Spell0.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell0;
                @Spell0.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell0;
                @Spell0.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell0;
                @Spell1.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell1;
                @Spell1.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell1;
                @Spell1.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell1;
                @Spell2.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell2;
                @Spell2.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell2;
                @Spell2.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell2;
                @Spell3.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell3;
                @Spell3.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell3;
                @Spell3.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell3;
                @Spell4.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell4;
                @Spell4.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell4;
                @Spell4.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell4;
                @Spell5.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell5;
                @Spell5.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell5;
                @Spell5.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell5;
                @Spell6.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell6;
                @Spell6.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell6;
                @Spell6.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell6;
                @Spell7.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell7;
                @Spell7.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell7;
                @Spell7.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell7;
                @Spell8.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell8;
                @Spell8.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell8;
                @Spell8.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnSpell8;
                @Run.started -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayermapsActionsCallbackInterface.OnRun;
            }
            m_Wrapper.m_PlayermapsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OpenStats.started += instance.OnOpenStats;
                @OpenStats.performed += instance.OnOpenStats;
                @OpenStats.canceled += instance.OnOpenStats;
                @Spell0.started += instance.OnSpell0;
                @Spell0.performed += instance.OnSpell0;
                @Spell0.canceled += instance.OnSpell0;
                @Spell1.started += instance.OnSpell1;
                @Spell1.performed += instance.OnSpell1;
                @Spell1.canceled += instance.OnSpell1;
                @Spell2.started += instance.OnSpell2;
                @Spell2.performed += instance.OnSpell2;
                @Spell2.canceled += instance.OnSpell2;
                @Spell3.started += instance.OnSpell3;
                @Spell3.performed += instance.OnSpell3;
                @Spell3.canceled += instance.OnSpell3;
                @Spell4.started += instance.OnSpell4;
                @Spell4.performed += instance.OnSpell4;
                @Spell4.canceled += instance.OnSpell4;
                @Spell5.started += instance.OnSpell5;
                @Spell5.performed += instance.OnSpell5;
                @Spell5.canceled += instance.OnSpell5;
                @Spell6.started += instance.OnSpell6;
                @Spell6.performed += instance.OnSpell6;
                @Spell6.canceled += instance.OnSpell6;
                @Spell7.started += instance.OnSpell7;
                @Spell7.performed += instance.OnSpell7;
                @Spell7.canceled += instance.OnSpell7;
                @Spell8.started += instance.OnSpell8;
                @Spell8.performed += instance.OnSpell8;
                @Spell8.canceled += instance.OnSpell8;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
            }
        }
    }
    public PlayermapsActions @Playermaps => new PlayermapsActions(this);

    // SpellCastingMap
    private readonly InputActionMap m_SpellCastingMap;
    private ISpellCastingMapActions m_SpellCastingMapActionsCallbackInterface;
    private readonly InputAction m_SpellCastingMap_SpellCastingMap;
    public struct SpellCastingMapActions
    {
        private @PlayerActions m_Wrapper;
        public SpellCastingMapActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SpellCastingMap => m_Wrapper.m_SpellCastingMap_SpellCastingMap;
        public InputActionMap Get() { return m_Wrapper.m_SpellCastingMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpellCastingMapActions set) { return set.Get(); }
        public void SetCallbacks(ISpellCastingMapActions instance)
        {
            if (m_Wrapper.m_SpellCastingMapActionsCallbackInterface != null)
            {
                @SpellCastingMap.started -= m_Wrapper.m_SpellCastingMapActionsCallbackInterface.OnSpellCastingMap;
                @SpellCastingMap.performed -= m_Wrapper.m_SpellCastingMapActionsCallbackInterface.OnSpellCastingMap;
                @SpellCastingMap.canceled -= m_Wrapper.m_SpellCastingMapActionsCallbackInterface.OnSpellCastingMap;
            }
            m_Wrapper.m_SpellCastingMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SpellCastingMap.started += instance.OnSpellCastingMap;
                @SpellCastingMap.performed += instance.OnSpellCastingMap;
                @SpellCastingMap.canceled += instance.OnSpellCastingMap;
            }
        }
    }
    public SpellCastingMapActions @SpellCastingMap => new SpellCastingMapActions(this);
    public interface IPlayermapsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenStats(InputAction.CallbackContext context);
        void OnSpell0(InputAction.CallbackContext context);
        void OnSpell1(InputAction.CallbackContext context);
        void OnSpell2(InputAction.CallbackContext context);
        void OnSpell3(InputAction.CallbackContext context);
        void OnSpell4(InputAction.CallbackContext context);
        void OnSpell5(InputAction.CallbackContext context);
        void OnSpell6(InputAction.CallbackContext context);
        void OnSpell7(InputAction.CallbackContext context);
        void OnSpell8(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
    public interface ISpellCastingMapActions
    {
        void OnSpellCastingMap(InputAction.CallbackContext context);
    }
}
